# Deployment Checklist: Pre-Deployment Commands (User Guide)

## STEP 0

_Updates the docs (including this one) to make sure it is fully up to date before proceeding. Ensure all commits are staged and pushed before proceeding._

**When to run:** Every single time.

1. Run the prompt in [`deployment-checklist-update`](../claude-prompts/docs-gen/deployment-checklist-update.md) in `claude-prompts/docs-gen` within a new chat in the Claude project.

---

## STEP 1 (OPTIONAL)

### script-gen

Prompts to generate actual scripts for new tests and utilities that need to be created for net-new functionality.

When to run: Run one-time when adding new functionality. This section should be scoped specifically to the new functionality only and any potentially updated functionality.

Files to Create/Update:

- `test_api_endpoint.py` - Tests POST /log-entry with real data
- `test_git_operations.py` - Tests file creation and Git commits
- `test_error_scenarios.py` - Tests failure modes
- `test_data_processing.py` - Tests date processing, slug generation, and JSON structure validation
- `test_stage_transitions.py` - Tests for stage transitions
- `test_user_interactions.py` - User interaction validation
- `test_responsive_design.py` - Basic responsive design checks
- `validate_backend.py` - Backend validation script
- `check_design_compliance.js` - Design compliance checker
- `test_error_handling.sh` - Error handling tests
- `validate_frontend.js` - Frontend validation tests
- `requirements-test.txt` - Testing dependencies
- `.eslintrc.js` - React configuration with hooks rules
- `.prettierrc` - Formatting rules
- `.flake8` - Basic configuration file
- `.mypy.ini` - Type checking configuration
- `pyproject.toml` - Black formatter configuration

Zsh Profile: `zsh-script-gen`

---

## STEP 2 (MANDATORY)

### validation-run

Pre-deployment prompt-based checks that must be run every time the codebase is updated (not scoped to just new functionality). This is executed holistically on all files in the repository.

When to run: Run every time the codebase is updated.

Files to Run:

- `lint-backend` - Python linting (black, flake8, mypy, bandit, shellcheck)
- `lint-frontend` - React/JS linting (eslint, prettier)
- `lint-design` - Design system compliance check
- `test-backend` - Backend workflow tests
- `test-frontend` - Frontend workflow tests
- `npm run validate:frontend` - Complete frontend validation
- `python validate_backend.py` - Complete backend validation
- `npm run check:design` - Design compliance checker
- `./test_error_handling.sh` - Error handling tests
- `requirements-dev.txt` - Linting dependencies
- `.eslintignore` - Ignore build outputs and node_modules

Zsh Profile: `zsh-validation-run`

---

## STEP 3 (MANDATORY)

1. Ensure you are at the root folder
2. Run the following: `cd /docs; chmod +x run-profiles.zsh; zsh run-profiles.zsh`
